!function () { function e(e) { try { if (e) { const t = 2e3, o = Date.now(); e = e.filter((e => { const r = function (e) { const [t, o, r, a, n, i] = e.split("-").map(Number); return new Date(t, o - 1, r, a, n, i) }(e.ExecutedTime); return o - r.getTime() <= t })), localStorage.setItem("datakeygetpathZeroCodeDummy12345678", JSON.stringify(e)) } } catch (e) { } } var t = []; function o() { function e(e) { return 1 == (e += "").length ? "0" + e : e } var t = new Date; return t.getFullYear() + "-" + e(t.getMonth() + 1) + "-" + e(t.getDate()) + "-" + e(t.getHours()) + "-" + e(t.getMinutes()) + "-" + e(t.getSeconds()) } function r(e, t) { var o, r = ""; if (document.title && (r = document.title), r || (r = (r = window.location.pathname) ? "home" : r.replaceAll("/", " ").replaceAll("&", " ").replaceAll("?", " ")), r || (r = "home"), o = r, e.tagName) { r = r + "-" + (e.tagName ? e.tagName.toLowerCase() : ""); var a = ""; if (e.getAttribute("name") ? (r = r + "-" + e.getAttribute("name"), a = e.getAttribute("name")) : e.getAttribute("placeholder") ? (r = r + "-" + e.getAttribute("placeholder"), a = e.getAttribute("placeholder")) : e.getAttribute("id") ? (r = r + "-" + e.getAttribute("id"), a = e.getAttribute("id")) : e.getAttribute("title") && (r = r + "-" + e.getAttribute("title"), a = e.getAttribute("title")), "" != a) { if ("sendkeys" == t) return "User should send keys to " + a + ", for " + o; if ("click" == t) return "User should click on " + a + ", for " + o } else if ("click" == t) { var n = ""; return e.textContent && (n = e.textContent.trim().substr(0, 20)), "User should click on " + n + ", for " + o } "label" != e.tagName.toLowerCase() && "button" != e.tagName.toLowerCase() || (r = r + "-" + e.textContent) } return r } function a(t) { setTimeout((() => { var a = function (e) { let t = e; if (t && t.id) return `//${t.localName}[@id='${t.id}']`; if (t && t.getAttribute("for")) return `//${t.localName}[@for='${t.getAttribute("for")}']`; if (t && t.getAttribute("name")) return `//${t.localName}[@name='${t.getAttribute("name")}']`; let o = []; for (; t && t.nodeType === Node.ELEMENT_NODE;) { let e = 0, r = !1, a = t.previousSibling; for (; a;)a.nodeType !== Node.DOCUMENT_TYPE_NODE && a.nodeName === t.nodeName && e++, a = a.previousSibling; for (a = t.nextSibling; a;) { if (a.nodeName === t.nodeName) { r = !0; break } a = a.nextSibling } let n = ""; if (t.id) { n = `${t.localName}[@id='${t.id}']`, o.push(n); break } if (t.getAttribute("name")) { n = `${t.localName}[@name='${t.getAttribute("name")}']`, o.push(n); break } if (t.getAttribute("for")) { n = `${t.localName}[@for='${t.getAttribute("for")}']`, o.push(n); break } n = (t.prefix ? `${t.prefix}:` : "") + t.localName, (e || r) && (n += `[${e + 1}]`), o.push(n), t = t.parentNode } return o.length ? "/" + o.reverse().join("/") : "" }(t.target), i = function (e) { let t = e; if (t && t.xidx, t && t.getAttribute("for")) return `//${t.localName}[@for='${t.getAttribute("for")}']`; if (t && t.getAttribute("name")) return `//${t.localName}[@name='${t.getAttribute("name")}']`; let o = []; for (; t && t.nodeType === Node.ELEMENT_NODE;) { let e = 0, r = !1, a = t.previousSibling; for (; a;)a.nodeType !== Node.DOCUMENT_TYPE_NODE && a.nodeName === t.nodeName && e++, a = a.previousSibling; for (a = t.nextSibling; a;) { if (a.nodeName === t.nodeName) { r = !0; break } a = a.nextSibling } let n = ""; if (t.xidx) { n = `${t.localName}[@id='${t.id}']`, o.push(n); break } if (t && t.getAttribute("name")) { n = `${t.localName}[@name='${t.getAttribute("name")}']`, o.push(n); break } if (t && t.getAttribute("for")) { n = `${t.localName}[@for='${t.getAttribute("for")}']`, o.push(n); break } n = (t.prefix ? `${t.prefix}:` : "") + t.localName, (e || r) && (n += `[${e + 1}]`), o.push(n), t = t.parentNode } return o.length ? "/" + o.reverse().join("/") : "" }(t.target); a && !a.startsWith("//") && (a = "/" + a), i && !i.startsWith("//") && (i = "/" + i); var s = "sendkeys", u = !0; if ("input" == t.type.toLowerCase() || "change" == t.type.toLowerCase()) if (t.target.type) { if ("checkbox" == t.target.type.toLowerCase() || "radio" == t.target.type.toLowerCase() || "button" == t.target.type.toLowerCase() || "submit" == t.target.type.toLowerCase()) return; s = "select" == t.target.tagName.toLowerCase() ? "selectdropdownByValue" : "sendkeys" } else s = "sendkeys"; else "click" == t.type.toLowerCase() || "mousedown" == t.type.toLowerCase() ? s = "select" == t.target.tagName.toLowerCase() ? "selectdropdownByValue" : "click" : "select" == t.target.tagName.toLowerCase() ? s = "selectdropdownByValue" : (u = !1, s = t.type.toLowerCase()); -1 != n && dataCaptureListZeroCodeDummy12345678[n] && dataCaptureListZeroCodeDummy12345678[n].LocatorTypeValue === a && dataCaptureListZeroCodeDummy12345678[n].Action == s || "click" == s && dataCaptureListZeroCodeDummy12345678[n] && dataCaptureListZeroCodeDummy12345678[n].LocatorTypeValue === a && dataCaptureListZeroCodeDummy12345678[n].Action == s ? (dataCaptureListZeroCodeDummy12345678[n].Value = t.target.value ? t.target.value : "", dataCaptureListZeroCodeDummy12345678[n].ExecutedTime = o()) : (n++, dataCaptureListZeroCodeDummy12345678.push({ RunNumber: n, TestCaseNumber: 1, TestCaseId: "1", TestStepId: n, TestCaseDataId: "1", Steps: r(t.target, s), ExecutedTime: o(), IsRun: u, LocatorType: "xpath", LocatorTypeValue: a, LocatorTypeNotIdValue: i, Action: s, Value: t.target.value ? t.target.value : t.target.innerText ? t.target.innerText.substr(0, 100) : "" })), e(dataCaptureListZeroCodeDummy12345678) })) } if (!window.dataCaptureListZeroCodeDummy12345678) { if (localStorage.getItem("datakeygetpathZeroCodeDummy12345678")) { window.dataCaptureListZeroCodeDummy12345678 = JSON.parse(localStorage.getItem("datakeygetpathZeroCodeDummy12345678")); var n = window.dataCaptureListZeroCodeDummy12345678.length - 1; n++, dataCaptureListZeroCodeDummy12345678.push({ RunNumber: n, TestCaseNumber: 1, TestCaseId: "1", TestStepId: n, TestCaseDataId: "1", Steps: "Navigate to the URL in the browser", ExecutedTime: o(), IsRun: !1, LocatorType: "NA", LocatorTypeValue: "NA", LocatorTypeIdValue: "NA", Action: "enterurl", Value: window.location.href }) } else { window.dataCaptureListZeroCodeDummy12345678 = window.dataCaptureListZeroCodeDummy12345678 || []; n = -1 } for (var i = document.querySelectorAll("button,[type=submit]"), s = 0; s < i.length; s++)i[s].addEventListener("click", a); if (t.length > 0) for (s = 0; s < t.length; s++)window.addEventListener(t[s], a); else window.addEventListener("click", a), window.addEventListener("input", a), window.addEventListener("contextmenu", a); window.addEventListener("beforeunload", (function () { dataCaptureListZeroCodeDummy12345678.push({ RunNumber: n, TestCaseNumber: 1, TestCaseId: "1", TestStepId: n, TestCaseDataId: "1", Steps: getSteps(document), ExecutedTime: o(), IsRun: !1, LocatorType: "xpath", LocatorTypeValue: xpathWithoutId, LocatorTypeIdValue: xpath, Action: "PageRefresh", Value: window.location.href }), e(dataCaptureListZeroCodeDummy12345678) })) } setInterval((() => { e(dataCaptureListZeroCodeDummy12345678) }), 500), o(); const u = new MutationObserver((e => { e.forEach((e => { e.addedNodes.forEach((e => { if (1 === e.nodeType) { e.addEventListener("click", a); e.querySelectorAll("*").forEach((e => { e.addEventListener("mousedown", a), e.addEventListener("input", a) })) } })) })) })); try { u.observe(document.body, { childList: !0, subtree: !0 }) } catch { } }(), function () { console.log, console.info, console.warn, console.error, console.debug; function e(e, t) { !function (e) { try { var t = window.location.href; e.pageUrl = t; var o = JSON.parse(localStorage.getItem("consoleDataCaptureListZeroCodeDummy12345678") || "[]"); if (o.push(e), o) { const e = 12e4, t = Date.now(); o = o.filter((o => { const r = new Date(o.timestamp).getTime(); return t - r <= e })) } localStorage.setItem("consoleDataCaptureListZeroCodeDummy12345678", JSON.stringify(o)) } catch (e) { } }({ type: e, timestamp: (new Date).toISOString(), Text: JSON.stringify(t) }) } ["log", "info", "warn", "error", "debug"].forEach((function (t) { console[t] = function () { e(t, arguments) } })), window.onerror = function (e, t, o, r, a) { console.error("Uncaught Exception:", { message: e, source: t, lineno: o, colno: r, stack: a?.stack || "No stack" }) }, window.addEventListener("unhandledrejection", (function (e) { console.error("Unhandled Promise Rejection:", { reason: e.reason, stack: e.reason?.stack || "No stack" }) })) }(); var requestData = []; !function (e) { if (e.__NETWORK_TRACKER_PRO__) return; function t(e, t) { !function (e) { try { var t = window.location.href; e.pageUrl = t; var o = JSON.parse(localStorage.getItem("apiDataCaptureListZeroCodeDummy12345678") || "[]"); if (o.push(e), o) { const e = 6e5, t = Date.now(); o = o.filter((o => { const r = new Date(o.timestamp).getTime(); return t - r <= e })) } localStorage.setItem("apiDataCaptureListZeroCodeDummy12345678", JSON.stringify(o)) } catch (e) { } }({ type: e, method: t.method, url: t.url, headers: JSON.stringify(t.headers), body: t.body, timestamp: (new Date).toISOString(), duration: t.duration, status: t.status, response: JSON.stringify(t.response), error: JSON.stringify(t.error) }) } e.__NETWORK_TRACKER_PRO__ = !0; const o = XMLHttpRequest.prototype.open, r = XMLHttpRequest.prototype.send, a = XMLHttpRequest.prototype.setRequestHeader; XMLHttpRequest.prototype.open = function (e, t, r, a, n) { return this._trackInfo = { method: e, url: t, headers: {}, startTime: Date.now() }, o.apply(this, arguments) }, XMLHttpRequest.prototype.setRequestHeader = function (e, t) { return this._trackInfo && (this._trackInfo.headers[e] = t), a.apply(this, arguments) }, XMLHttpRequest.prototype.send = function (e) { return this._trackInfo && (this._trackInfo.body = e), this.addEventListener("loadend", (function () { const e = Date.now() - this._trackInfo.startTime; t("XHR", { ...this._trackInfo, status: this.status, duration: e, response: this.responseText }) })), this.addEventListener("error", (function () { t("XHR", { ...this._trackInfo, error: "Network Error" }) })), r.apply(this, arguments) }; const n = e.fetch; e.fetch = new Proxy(n, { apply: function (e, o, r) { const [a, n = {}] = r, i = { method: n.method || "GET", url: "string" == typeof a ? a : a.url, headers: n.headers || {}, body: n.body, startTime: Date.now() }; return Reflect.apply(e, o, r).then((e => e.clone().text().then((o => { const r = Date.now() - i.startTime; return t("fetch", { ...i, status: e.status, duration: r, response: o }), e })))).catch((e => { throw t("fetch", { ...i, error: e.message || e }), e })) } }) }(window);